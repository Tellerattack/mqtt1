package com.example.lgw.mqtt1.remote;

import android.content.Context;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.util.Log;
import android.widget.Toast;

import com.example.lgw.mqtt1.R;

import java.util.ArrayList;
import java.util.List;

public class RemoteDao {
    private static final String TAG = "OrdersDao";

    // 列定义
    private final String[] ORDER_COLUMNS = new String[] {"Id", "Function","Code"};

    private Context context;
    private RemoteDBHelper ordersDBHelper;

    public RemoteDao(Context context) {
        this.context = context;
        ordersDBHelper = new RemoteDBHelper(context);
    }

    /**
     * 判断表中是否有数据
     */
    public boolean isDataExist(){
        int count = 0;

        SQLiteDatabase db = null;
        Cursor cursor = null;

        try {
            db = ordersDBHelper.getReadableDatabase();
            // select count(Id) from Orders
            cursor = db.query(RemoteDBHelper.TABLE_NAME, new String[]{"COUNT(Id)"}, null, null, null, null, null);

            if (cursor.moveToFirst()) {
                count = cursor.getInt(0);
            }
            if (count > 0) {
                return true;
            }
        }
        catch (Exception e) {
            Log.e(TAG, "", e);
        }
        finally {
            if (cursor != null) {
                cursor.close();
            }
            if (db != null) {
                db.close();
            }
        }
        return false;
    }

    /**
     * 初始化数据
     */
    public void initTable(){
        SQLiteDatabase db = null;

        try {
            db = ordersDBHelper.getWritableDatabase();
            db.beginTransaction();
            db.execSQL("delete from tv_sony_rm_sd021");
            db.execSQL("insert into " + RemoteDBHelper.TABLE_NAME + " (Id, Function, Code) values (1, '开/关', '{\"IR_CODE\":\"2400,600,1200,600,600,600,1200,600,600,600,1200,600,600,600,600,600,1200,600,600,600,600,600,600,600,600,20600,2400,600,1200,600,600,600,1200,600,600,600,1200,600,600,600,600,600,1200,600,600,600,600,600,600,600,600,20600,2400,600,1200,600,600,600,1200,600,600,600,1200,600,600,600,600,600,1200,600,600,600,600,600,600,600,600,20600\"}')");
            db.execSQL("insert into " + RemoteDBHelper.TABLE_NAME + " (Id, Function, Code) values (2, '输入选择', '{\"IR_CODE\":\"2400,600,1200,600,600,600,1200,600,600,600,600,600,1200,600,600,600,1200,600,600,600,600,600,600,600,600,20600,2400,600,1200,600,600,600,1200,600,600,600,600,600,1200,600,600,600,1200,600,600,600,600,600,600,600,600,20600,2400,600,1200,600,600,600,1200,600,600,600,600,600,1200,600,600,600,1200,600,600,600,600,600,600,600,600,20600\"}')");
            db.execSQL("insert into " + RemoteDBHelper.TABLE_NAME + " (Id, Function, Code) values (3, '1','{\"IR_CODE\":\"2400,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,1200,600,600,600,600,600,600,600,600,20600,2400,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,1200,600,600,600,600,600,600,600,600,20600,2400,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,1200,600,600,600,600,600,600,600,600,600\"}')");
            db.execSQL("insert into " + RemoteDBHelper.TABLE_NAME + " (Id, Function, Code) values (4, '2', '{\"IR_CODE\":\"2400,600,1200,600,600,600,600,600,600,600,600,600,600,600,600,600,1200,600,600,600,600,600,600,600,600,20600,2400,600,1200,600,600,600,600,600,600,600,600,600,600,600,600,600,1200,600,600,600,600,600,600,600,600,20600,2400,600,1200,600,600,600,600,600,600,600,600,600,600,600,600,600,1200,600,600,600,600,600,600,600,600,20600\"}')");
            db.execSQL("insert into " + RemoteDBHelper.TABLE_NAME + " (Id, Function, Code) values (5, '5', '{\"IR_CODE\":\"2400,600,600,600,600,600,1200,600,600,600,600,600,600,600,600,600,1200,600,600,600,600,600,600,600,600,20600,2400,600,600,600,600,600,1200,600,600,600,600,600,600,600,600,600,1200,600,600,600,600,600,600,600,600,20600,2400,600,600,600,600,600,1200,600,600,600,600,600,600,600,600,600,1200,600,600,600,600,600,600,600,600,20600\"}')");
            db.execSQL("insert into " + RemoteDBHelper.TABLE_NAME + " (Id, Function, Code) values (6, '3', '{\"IR_CODE\":\"2400,600,600,600,1200,600,600,600,600,600,600,600,600,600,600,600,1200,600,600,600,600,600,600,600,600,20600,2400,600,600,600,1200,600,600,600,600,600,600,600,600,600,600,600,1200,600,600,600,600,600,600,600,600,20600,2400,600,600,600,1200,600,600,600,600,600,600,600,600,600,600,600,1200,600,600,600,600,600,600,600,600,20600\"}')");
            db.execSQL("insert into " + RemoteDBHelper.TABLE_NAME + " (Id, Function, Code) values (7, '4', '{\"IR_CODE\":\"2400,600,1200,600,1200,600,600,600,600,600,600,600,600,600,600,600,1200,600,600,600,600,600,600,600,600,20600,2400,600,1200,600,1200,600,600,600,600,600,600,600,600,600,600,600,1200,600,600,600,600,600,600,600,600,20600,2400,600,1200,600,1200,600,600,600,600,600,600,600,600,600,600,600,1200,600,600,600,600,600,600,600,600,20600\"}')");
            db.execSQL("insert into " + RemoteDBHelper.TABLE_NAME + " (Id, Function, Code) values (8, '6', '{\"IR_CODE\":\"2400,600,1200,600,600,600,1200,600,600,600,600,600,600,600,600,600,1200,600,600,600,600,600,600,600,600,20600,2400,600,1200,600,600,600,1200,600,600,600,600,600,600,600,600,600,1200,600,600,600,600,600,600,600,600,20600,2400,600,1200,600,600,600,1200,600,600,600,600,600,600,600,600,600,1200,600,600,600,600,600,600,600,600,20600\"}')");
            db.execSQL("insert into " + RemoteDBHelper.TABLE_NAME + " (Id, Function, Code) values (9, '7', '{\"IR_CODE\":\"2400,600,600,600,1200,600,1200,600,600,600,600,600,600,600,600,600,1200,600,600,600,600,600,600,600,600,20600,2400,600,600,600,1200,600,1200,600,600,600,600,600,600,600,600,600,1200,600,600,600,600,600,600,600,600,20600,2400,600,600,600,1200,600,1200,600,600,600,600,600,600,600,600,600,1200,600,600,600,600,600,600,600,600,20600\"}')");
            db.execSQL("insert into " + RemoteDBHelper.TABLE_NAME + " (Id, Function, Code) values (10, '8', '{\"IR_CODE\":\"2400,600,1200,600,1200,600,1200,600,600,600,600,600,600,600,600,600,1200,600,600,600,600,600,600,600,600,20600,2400,600,1200,600,1200,600,1200,600,600,600,600,600,600,600,600,600,1200,600,600,600,600,600,600,600,600,20600,2400,600,1200,600,1200,600,1200,600,600,600,600,600,600,600,600,600,1200,600,600,600,600,600,600,600,600,20600\"}')");
            db.execSQL("insert into " + RemoteDBHelper.TABLE_NAME + " (Id, Function, Code) values (11, '9', '{\"IR_CODE\":\"2400,600,600,600,600,600,600,600,1200,600,600,600,600,600,600,600,1200,600,600,600,600,600,600,600,600,20600,2400,600,600,600,600,600,600,600,1200,600,600,600,600,600,600,600,1200,600,600,600,600,600,600,600,600,20600,2400,600,600,600,600,600,600,600,1200,600,600,600,600,600,600,600,1200,600,600,600,600,600,600,600,600,20600\"}')");
            db.execSQL("insert into " + RemoteDBHelper.TABLE_NAME + " (Id, Function, Code) values (12, '0', '{\"IR_CODE\":\"2400,600,1200,600,600,600,600,600,1200,600,600,600,600,600,600,600,1200,600,600,600,600,600,600,600,600,20600,2400,600,1200,600,600,600,600,600,1200,600,600,600,600,600,600,600,1200,600,600,600,600,600,600,600,600,20600,2400,600,1200,600,600,600,600,600,1200,600,600,600,600,600,600,600,1200,600,600,600,600,600,600,600,600,20600\"}')");
            db.execSQL("insert into " + RemoteDBHelper.TABLE_NAME + " (Id, Function, Code) values (13, '上键', '{\"IR_CODE\":\"2400,600,600,600,600,600,1200,600,600,600,1200,600,1200,600,1200,600,1200,600,600,600,600,600,600,600,600,20600,2400,600,600,600,600,600,1200,600,600,600,1200,600,1200,600,1200,600,1200,600,600,600,600,600,600,600,600,20600,2400,600,600,600,600,600,1200,600,600,600,1200,600,1200,600,1200,600,1200,600,600,600,600,600,600,600,600,20600\"}')");
            db.execSQL("insert into " + RemoteDBHelper.TABLE_NAME + " (Id, Function, Code) values (14, '下键', '{\"IR_CODE\":\"2400,600,1200,600,600,600,1200,600,600,600,1200,600,1200,600,1200,600,1200,600,600,600,600,600,600,600,600,20600,2400,600,1200,600,600,600,1200,600,600,600,1200,600,1200,600,1200,600,1200,600,600,600,600,600,600,600,600,20600,2400,600,1200,600,600,600,1200,600,600,600,1200,600,1200,600,1200,600,1200,600,600,600,600,600,600,600,600,20600\"}')");
            db.execSQL("insert into " + RemoteDBHelper.TABLE_NAME + " (Id, Function, Code) values (15, '左键', '{\"IR_CODE\":\"2400,600,600,600,600,600,1200,600,600,600,1200,600,1200,600,600,600,1200,600,600,600,600,600,600,600,600,20600,2400,600,600,600,600,600,1200,600,600,600,1200,600,1200,600,600,600,1200,600,600,600,600,600,600,600,600,20600,2400,600,600,600,600,600,1200,600,600,600,1200,600,1200,600,600,600,1200,600,600,600,600,600,600,600,600,20600\"}')");
            db.execSQL("insert into " + RemoteDBHelper.TABLE_NAME + " (Id, Function, Code) values (16, '右键', '{\"IR_CODE\":\"2400,600,1200,600,1200,600,600,600,600,600,1200,600,1200,600,600,600,1200,600,600,600,600,600,600,600,600,20600,2400,600,1200,600,1200,600,600,600,600,600,1200,600,1200,600,600,600,1200,600,600,600,600,600,600,600,600,20600,2400,600,1200,600,1200,600,600,600,600,600,1200,600,1200,600,600,600,1200,600,600,600,600,600,600,600,600,20600\"}')");
            db.execSQL("insert into " + RemoteDBHelper.TABLE_NAME + " (Id, Function, Code) values (17, '中键', '{\"IR_CODE\":\"2400,600,1200,600,600,600,1200,600,600,600,600,600,1200,600,1200,600,1200,600,600,600,600,600,600,600,600,20600,2400,600,1200,600,600,600,1200,600,600,600,600,600,1200,600,1200,600,1200,600,600,600,600,600,600,600,600,20600,2400,600,1200,600,600,600,1200,600,600,600,600,600,1200,600,1200,600,1200,600,600,600,600,600,600,600,600,20600\"}')");
            db.execSQL("insert into " + RemoteDBHelper.TABLE_NAME + " (Id, Function, Code) values (18, '声音切换', '{\"IR_CODE\":\"2400,600,1200,600,1200,600,1200,600,600,600,1200,600,600,600,600,600,1200,600,600,600,600,600,600,600,600,20600,2400,600,1200,600,1200,600,1200,600,600,600,1200,600,600,600,600,600,1200,600,600,600,600,600,600,600,600,20600,2400,600,1200,600,1200,600,1200,600,600,600,1200,600,600,600,600,600,1200,600,600,600,600,600,600,600,600,20600\"}')");
            db.execSQL("insert into " + RemoteDBHelper.TABLE_NAME + " (Id, Function, Code) values (19, '音量加', '{\"IR_CODE\":\"2400,600,600,600,1200,600,600,600,600,600,1200,600,600,600,600,600,1200,600,600,600,600,600,600,600,600,20600,2400,600,600,600,1200,600,600,600,600,600,1200,600,600,600,600,600,1200,600,600,600,600,600,600,600,600,20600,2400,600,600,600,1200,600,600,600,600,600,1200,600,600,600,600,600,1200,600,600,600,600,600,600,600,600,20600\"}')");
            db.execSQL("insert into " + RemoteDBHelper.TABLE_NAME + " (Id, Function, Code) values (20, '音量减', '{\"IR_CODE\":\"2424,580,1208,580,1208,580,612,580,612,584,1204,584,604,588,608,584,1204,584,584,608,588,608,584,608,604,25668,2400,580,1208,580,1208,584,608,584,608,584,1204,584,608,584,608,584,1204,584,608,584,608,584,608,584,608,25680,2396,580,1208,584,1204,584,608,584,608,584,1204,584,612,580,608,584,1208,580,612,580,612,580,612,580,612,25676,2396,584,1204,584,1204,584,608,584,608,584,1208,580,612,580,612,580,1208,580,612,580,612,584,608,580,612\"}')");
            db.execSQL("insert into " + RemoteDBHelper.TABLE_NAME + " (Id, Function, Code) values (21, '静音', '{\"IR_CODE\":\"2400,600,600,600,600,600,1200,600,600,600,1200,600,600,600,600,600,1200,600,600,600,600,600,600,600,600,20600,2400,600,600,600,600,600,1200,600,600,600,1200,600,600,600,600,600,1200,600,600,600,600,600,600,600,600,20600,2400,600,600,600,600,600,1200,600,600,600,1200,600,600,600,600,600,1200,600,600,600,600,600,600,600,600,20600\"}')");
            db.execSQL("insert into " + RemoteDBHelper.TABLE_NAME + " (Id, Function, Code) values (22, '频道加', '{\"IR_CODE\":\"2400,600,600,600,600,600,600,600,600,600,1200,600,600,600,600,600,1200,600,600,600,600,600,600,600,600,20600,2400,600,600,600,600,600,600,600,600,600,1200,600,600,600,600,600,1200,600,600,600,600,600,600,600,600,20600,2400,600,600,600,600,600,600,600,600,600,1200,600,600,600,600,600,1200,600,600,600,600,600,600,600,600,20600\"}')");
            db.execSQL("insert into " + RemoteDBHelper.TABLE_NAME + " (Id, Function, Code) values (23, '频道减', '{\"IR_CODE\":\"2400,600,1200,600,600,600,600,600,600,600,1200,600,600,600,600,600,1200,600,600,600,600,600,600,600,600,20600,2400,600,1200,600,600,600,600,600,600,600,1200,600,600,600,600,600,1200,600,600,600,600,600,600,600,600,20600,2400,600,1200,600,600,600,600,600,600,600,1200,600,600,600,600,600,1200,600,600,600,600,600,600,600,600,20600\"}')");
            db.execSQL("insert into " + RemoteDBHelper.TABLE_NAME + " (Id, Function, Code) values (24, '回看', '{\"IR_CODE\":\"2400,600,1200,600,1200,600,600,600,1200,600,1200,600,1200,600,600,600,1200,600,600,600,600,600,600,600,600,20600,2400,600,1200,600,1200,600,600,600,1200,600,1200,600,1200,600,600,600,1200,600,600,600,600,600,600,600,600,20600,2400,600,1200,600,1200,600,600,600,1200,600,1200,600,1200,600,600,600,1200,600,600,600,600,600,600,600,600,20600\"}')");
            db.execSQL("insert into " + RemoteDBHelper.TABLE_NAME + " (Id, Function, Code) values (25, 'SEN', '{\"IR_CODE\":\"2400,600,1200,600,600,600,1200,600,1200,600,1200,600,1200,600,1200,600,600,600,1200,600,600,600,1200,600,1200,600,600,600,600,600,600,20600,2400,600,1200,600,600,600,1200,600,1200,600,1200,600,1200,600,1200,600,600,600,1200,600,600,600,1200,600,1200,600,600,600,600,600,600,20600,2400,600,1200,600,600,600,1200,600,1200,600,1200,600,1200,600,1200,600,600,600,1200,600,600,600,1200,600,1200,600,600,600,600,600,600,20600\"}')");
            db.execSQL("insert into " + RemoteDBHelper.TABLE_NAME + " (Id, Function, Code) values (26, '屏显', '{\"IR_CODE\":\"2400,600,600,600,1200,600,600,600,1200,600,1200,600,1200,600,600,600,1200,600,600,600,600,600,600,600,600,20600,2400,600,600,600,1200,600,600,600,1200,600,1200,600,1200,600,600,600,1200,600,600,600,600,600,600,600,600,20600,2400,600,600,600,1200,600,600,600,1200,600,1200,600,1200,600,600,600,1200,600,600,600,600,600,600,600,600,20600\"}')");
            db.execSQL("insert into " + RemoteDBHelper.TABLE_NAME + " (Id, Function, Code) values (27, '主菜单', '{\"IR_CODE\":\"2400,600,600,600,600,600,600,600,600,600,600,600,1200,600,1200,600,1200,600,600,600,600,600,600,600,600,20600,2400,600,600,600,600,600,600,600,600,600,600,600,1200,600,1200,600,1200,600,600,600,600,600,600,600,600,20600,2400,600,600,600,600,600,600,600,600,600,600,600,1200,600,1200,600,1200,600,600,600,600,600,600,600,600,20600\"}')");
            db.execSQL("insert into " + RemoteDBHelper.TABLE_NAME + " (Id, Function, Code) values (28, '返回', '{\"IR_CODE\":\"2400,600,1200,600,1200,600,600,600,600,600,600,600,1200,600,600,600,1200,600,1200,600,1200,600,600,600,1200,600,600,600,600,600,1200,20600,2400,600,1200,600,1200,600,600,600,600,600,600,600,1200,600,600,600,1200,600,1200,600,1200,600,600,600,1200,600,600,600,600,600,1200,20600,2400,600,1200,600,1200,600,600,600,600,600,600,600,1200,600,600,600,1200,600,1200,600,1200,600,600,600,1200,600,600,600,600,600,1200,20600\"}')");
            db.execSQL("insert into " + RemoteDBHelper.TABLE_NAME + " (Id, Function, Code) values (29, '电子节目指南', '{\"IR_CODE\":\"2400,600,1200,600,1200,600,600,600,1200,600,1200,600,600,600,1200,600,600,600,600,600,1200,600,600,600,600,600,1200,600,600,600,1200,20600,2400,600,1200,600,1200,600,600,600,1200,600,1200,600,600,600,1200,600,600,600,600,600,1200,600,600,600,600,600,1200,600,600,600,1200,20600,2400,600,1200,600,1200,600,600,600,1200,600,1200,600,600,600,1200,600,600,600,600,600,1200,600,600,600,600,600,1200,600,600,600,1200,20600\"}')");
            db.execSQL("insert into " + RemoteDBHelper.TABLE_NAME + " (Id, Function, Code) values (30, '屏显模式', '{\"IR_CODE\":\"2400,600,1200,600,600,600,1200,600,1200,600,1200,600,1200,600,600,600,600,600,600,600,1200,600,600,600,600,600,1200,600,600,600,1200,20600,2400,600,1200,600,600,600,1200,600,1200,600,1200,600,1200,600,600,600,600,600,600,600,1200,600,600,600,600,600,1200,600,600,600,1200,20600,2400,600,1200,600,600,600,1200,600,1200,600,1200,600,1200,600,600,600,600,600,600,600,1200,600,600,600,600,600,1200,600,600,600,1200,20600\"}')");
            db.execSQL("insert into " + RemoteDBHelper.TABLE_NAME + " (Id, Function, Code) values (31, '数字', '{\"IR_CODE\":\"2400,600,1200,600,600,600,1200,600,1200,600,600,600,600,600,600,600,1200,600,1200,600,1200,600,600,600,1200,600,1200,600,1200,600,600,20600,2400,600,1200,600,600,600,1200,600,1200,600,600,600,600,600,600,600,1200,600,1200,600,1200,600,600,600,1200,600,1200,600,1200,600,600,20600,2400,600,1200,600,600,600,1200,600,1200,600,600,600,600,600,600,600,1200,600,1200,600,1200,600,600,600,1200,600,1200,600,1200,600,600,20600\"}')");
            db.execSQL("insert into " + RemoteDBHelper.TABLE_NAME + " (Id, Function, Code) values (32, '双画面', '{\"IR_CODE\":\"2400,600,1200,600,1200,600,1200,600,600,600,1200,600,1200,600,1200,600,600,600,600,600,1200,600,600,600,600,600,1200,600,600,600,1200,20600,2400,600,1200,600,1200,600,1200,600,600,600,1200,600,1200,600,1200,600,600,600,600,600,1200,600,600,600,600,600,1200,600,600,600,1200,20600,2400,600,1200,600,1200,600,1200,600,600,600,1200,600,1200,600,1200,600,600,600,600,600,1200,600,600,600,600,600,1200,600,600,600,1200,20600\"}')");
            db.execSQL("insert into " + RemoteDBHelper.TABLE_NAME + " (Id, Function, Code) values (33, '相框模式', '{\"IR_CODE\":\"2400,600,1200,600,600,600,1200,600,600,600,1200,600,600,600,1200,600,600,600,1200,600,600,600,1200,600,1200,600,600,600,600,600,600,20600,2400,600,1200,600,600,600,1200,600,600,600,1200,600,600,600,1200,600,600,600,1200,600,600,600,1200,600,1200,600,600,600,600,600,600,20600,2400,600,1200,600,600,600,1200,600,600,600,1200,600,600,600,1200,600,600,600,1200,600,600,600,1200,600,1200,600,600,600,600,600,600,20600\"}')");
            db.execSQL("insert into " + RemoteDBHelper.TABLE_NAME + " (Id, Function, Code) values (34, '红', '{\"IR_CODE\":\"2400,600,1200,600,600,600,1200,600,600,600,600,600,1200,600,600,600,1200,600,1200,600,1200,600,600,600,1200,600,600,600,600,600,1200,20600,2400,600,1200,600,600,600,1200,600,600,600,600,600,1200,600,600,600,1200,600,1200,600,1200,600,600,600,1200,600,600,600,600,600,1200,20600,2400,600,1200,600,600,600,1200,600,600,600,600,600,1200,600,600,600,1200,600,1200,600,1200,600,600,600,1200,600,600,600,600,600,1200,20600\"}')");
            db.execSQL("insert into " + RemoteDBHelper.TABLE_NAME + " (Id, Function, Code) values (35, '绿', '{\"IR_CODE\":\"2400,600,600,600,1200,600,1200,600,600,600,600,600,1200,600,600,600,1200,600,1200,600,1200,600,600,600,1200,600,600,600,600,600,1200,20600,2400,600,600,600,1200,600,1200,600,600,600,600,600,1200,600,600,600,1200,600,1200,600,1200,600,600,600,1200,600,600,600,600,600,1200,20600,2400,600,600,600,1200,600,1200,600,600,600,600,600,1200,600,600,600,1200,600,1200,600,1200,600,600,600,1200,600,600,600,600,600,1200,20600\"}')");
            db.execSQL("insert into " + RemoteDBHelper.TABLE_NAME + " (Id, Function, Code) values (36, '黄', '{\"IR_CODE\":\"2400,600,1200,600,1200,600,1200,600,600,600,600,600,1200,600,600,600,1200,600,1200,600,1200,600,600,600,1200,600,600,600,600,600,1200,20600,2400,600,1200,600,1200,600,1200,600,600,600,600,600,1200,600,600,600,1200,600,1200,600,1200,600,600,600,1200,600,600,600,600,600,1200,20600,2400,600,1200,600,1200,600,1200,600,600,600,600,600,1200,600,600,600,1200,600,1200,600,1200,600,600,600,1200,600,600,600,600,600,1200,20600\"}')");
            db.execSQL("insert into " + RemoteDBHelper.TABLE_NAME + " (Id, Function, Code) values (37, '蓝', '{\"IR_CODE\":\"2400,600,600,600,600,600,1200,600,600,600,600,600,1200,600,600,600,1200,600,1200,600,1200,600,600,600,1200,600,600,600,600,600,1200,20600,2400,600,600,600,600,600,1200,600,600,600,600,600,1200,600,600,600,1200,600,1200,600,1200,600,600,600,1200,600,600,600,600,600,1200,20600,2400,600,600,600,600,600,1200,600,600,600,600,600,1200,600,600,600,1200,600,1200,600,1200,600,600,600,1200,600,600,600,600,600,1200,20600\"}')");
            db.execSQL("insert into " + RemoteDBHelper.TABLE_NAME + " (Id, Function, Code) values (38, '3D', '{\"IR_CODE\":\"2400,600,1200,600,600,600,1200,600,1200,600,600,600,600,600,1200,600,1200,600,1200,600,1200,600,600,600,1200,600,1200,600,1200,600,600,206002400,600,1200,600,600,600,1200,600,1200,600,600,600,600,600,1200,600,1200,600,1200,600,1200,600,600,600,1200,600,1200,600,1200,600,600,20600,2400,600,1200,600,600,600,1200,600,1200,600,600,600,600,600,1200,600,1200,600,1200,600,1200,600,600,600,1200,600,1200,600,1200,600,600,20600\"}')");
            db.execSQL("insert into " + RemoteDBHelper.TABLE_NAME + " (Id, Function, Code) values (39, '字幕设定', '{\"IR_CODE\":\"2400,600,600,600,600,600,600,600,1200,600,600,600,1200,600,600,600,1200,600,1200,600,1200,600,600,600,1200,600,600,600,600,600,1200,20600,2400,600,600,600,600,600,600,600,1200,600,600,600,1200,600,600,600,1200,600,1200,600,1200,600,600,600,1200,600,600,600,600,600,1200,20600,2400,600,600,600,600,600,600,600,1200,600,600,600,1200,600,600,600,1200,600,1200,600,1200,600,600,600,1200,600,600,600,600,600,1200,20600\"}')");
            db.execSQL("insert into " + RemoteDBHelper.TABLE_NAME + " (Id, Function, Code) values (40, '同步菜单', '{\"IR_CODE\":\"2400,600,600,600,600,600,600,600,1200,600,1200,600,600,600,1200,600,600,600,1200,600,600,600,1200,600,1200,600,600,600,600,600,20600,2400,600,600,600,600,600,600,600,1200,600,1200,600,600,600,1200,600,600,600,1200,600,600,600,1200,600,1200,600,600,600,600,600,20600,2400,600,600,600,600,600,600,600,1200,600,1200,600,600,600,1200,600,600,600,1200,600,600,600,1200,600,1200,600,600,600,600,600,20600\"}')");
            db.execSQL("insert into " + RemoteDBHelper.TABLE_NAME + " (Id, Function, Code) values (41, '选项', '{\"IR_CODE\":\"2400,600,600,600,1200,600,1200,600,600,600,1200,600,1200,600,600,600,1200,600,1200,600,1200,600,600,600,1200,600,600,600,600,600,1200,20600,2400,600,600,600,1200,600,1200,600,600,600,1200,600,1200,600,600,600,1200,600,1200,600,1200,600,600,600,1200,600,600,600,600,600,1200,20600,2400,600,600,600,1200,600,1200,600,600,600,1200,600,1200,600,600,600,1200,600,1200,600,1200,600,600,600,1200,600,600,600,600,600,1200,20600\"}')");
            db.execSQL("insert into " + RemoteDBHelper.TABLE_NAME + " (Id, Function, Code) values (42, '风速/开', '{\"IR_CODE\":\"1300,400,1250,400,400,1250,1250,400,1300,400,400,1250,400,1250,400,1200,400,1200,400,1250,1250,400,400,2400,1300,400,1250,400,400,1250,1250,400,1300,400,400,1250,400,1250,400,1200,400,1200,400,1250,1250,400,400,2400,1300,400,1250,400,400,1250,1250,400,1300,400,400,1250,400,1250,400,1200,400,1200,400,1250,1250,400,400,2400\"}')");
            db.execSQL("insert into " + RemoteDBHelper.TABLE_NAME + " (Id, Function, Code) values (43, '风扇关', '{\"IR_CODE\":\"1300,400,1250,400,400,1250,1250,400,1250,450,400,1250,400,1250,400,1250,400,1300,400,1250,400,1250,1250,2400,1300,400,1250,400,400,1250,1250,400,1250,450,400,1250,400,1250,400,1250,400,1300,400,1250,400,1250,1250,2400,1300,400,1250,400,400,1250,1250,400,1250,450,400,1250,400,1250,400,1250,400,1300,400,1250,400,1250,1250,2400\"}')");
            db.execSQL("insert into " + RemoteDBHelper.TABLE_NAME + " (Id, Function, Code) values (44, '摇头', '{\"IR_CODE\":\"1300,400,1250,400,450,1200,1300,400,1250,400,450,1200,450,1200,1300,400,400,1250,400,1250,450,1200,450,2400,1300,400,1250,400,450,1200,1300,400,1250,400,450,1200,450,1200,1300,400,400,1250,400,1250,450,1200,450,2400,1300,400,1250,400,450,1200,1300,400,1250,400,450,1200,450,1200,1300,400,400,1250,400,1250,450,1200,450,2400\"}')");
            db.execSQL("insert into " + RemoteDBHelper.TABLE_NAME + " (Id, Function, Code) values (45, '空调开', '{\"IR_CODE\":\"9000,4500,560,560,560,560,560,1690,560,1690,560,1690,560,560,560,560,560,560,560,560,560,1690,560,1690,560,1690,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,1690,560,560,560,1690,560,560,560,560,560,1690,560,560,560,20000,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,1690,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,1690,560,560,560,560\"}')");
            db.execSQL("insert into " + RemoteDBHelper.TABLE_NAME + " (Id, Function, Code) values (46, '空调关','{\"IR_CODE\":\"9000,4500,560,560,560,560,560,1690,560,560,560,1690,560,560,560,560,560,560,560,560,560,1690,560,1690,560,1690,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,1690,560,560,560,1690,560,560,560,560,560,1690,560,560,560,20000,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,1690,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,1690,560,560,560,560,560,1690,560,560,560,560\"}')");
            db.execSQL("insert into " + RemoteDBHelper.TABLE_NAME + " (Id, Function, Code) values (47, '制冷模式','{\"IR_CODE\":\"9000,4500,560,1690,560,560,560,560,560,1690,560,1690,560,560,560,560,560,560,560,560,560,1690,560,560,560,1690,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,1690,560,560,560,1690,560,560,560,560,560,1690,560,560,560,20000,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,1690,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,1690,560,560,560,1690,560,1690,560,560\"}')");
            db.execSQL("insert into " + RemoteDBHelper.TABLE_NAME + " (Id, Function, Code) values (48, '制热模式','{\"IR_CODE\":\"9000,4500,560,560,560,560,560,1690,560,1690,560,1690,560,560,560,560,560,560,560,560,560,1690,560,560,560,1690,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,1690,560,560,560,1690,560,560,560,560,560,1690,560,560,560,20000,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,1690,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560\"}')");
            db.execSQL("insert into " + RemoteDBHelper.TABLE_NAME + " (Id, Function, Code) values (49, '送风','{\"IR_CODE\":\"9000,4500,560,1690,560,1690,560,560,560,1690,560,1690,560,560,560,560,560,560,560,560,560,1690,560,560,560,1690,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,1690,560,560,560,1690,560,560,560,560,560,1690,560,560,560,20000,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,1690,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,1690,560,1690,560,1690,560,1690,560,560\"}')");
            db.execSQL("insert into " + RemoteDBHelper.TABLE_NAME + " (Id, Function, Code) values (50, '除湿','{\"IR_CODE\":\"9000,4500,560,560,560,1690,560,560,560,1690,560,1690,560,560,560,560,560,560,560,560,560,1690,560,560,560,1690,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,1690,560,560,560,1690,560,560,560,560,560,1690,560,560,560,20000,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,1690,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,1690,560,1690,560,1690,560,560\"}')");
            db.setTransactionSuccessful();
        }catch (Exception e){
            e.printStackTrace();
            e.getMessage();
           Log.e("chuci", "cuo",e);
        }finally {
            if (db != null) {
                db.endTransaction();
                db.close();
            }
        }
    }

    /**
     * 执行自定义SQL语句
     */
    public void execSQL(String sql) {
        SQLiteDatabase db = null;

        try {
            if (sql.contains("select")){
                Toast.makeText(context, R.string.strUnableSql, Toast.LENGTH_SHORT).show();
            }else if (sql.contains("insert") || sql.contains("update") || sql.contains("delete")){
                db = ordersDBHelper.getWritableDatabase();
                db.beginTransaction();
                db.execSQL(sql);
                db.setTransactionSuccessful();
                Toast.makeText(context, R.string.strSuccessSql, Toast.LENGTH_SHORT).show();
            }
        } catch (Exception e) {
            Toast.makeText(context, R.string.strErrorSql, Toast.LENGTH_SHORT).show();
            Log.e(TAG, "", e);
        } finally {
            if (db != null) {
                db.endTransaction();
                db.close();
            }
        }
    }
    /**
     * 数据查询，将索尼电视开关键的信息提取出来
     */
    public List<Remote> getTurnOrder(){
        SQLiteDatabase db = null;
        Cursor cursor = null;
        try {
            db = ordersDBHelper.getReadableDatabase();

            // select * from Orders where Function = 'Bor'
            cursor = db.query(RemoteDBHelper.TABLE_NAME,
                    ORDER_COLUMNS,
                    "Function = ?",
                    new String[] {"开/关"},
                    null, null, null);

            if (cursor.getCount() > 0) {
                List<Remote> orderList = new ArrayList<Remote>(cursor.getCount());
                while (cursor.moveToNext()) {
                    Remote Remote = parseOrder(cursor);
                    orderList.add(Remote);
                }
                return orderList;
            }
        }
        catch (Exception e) {
            Log.e(TAG, "", e);
        }
        finally {
            if (cursor != null) {
                cursor.close();
            }
            if (db != null) {
                db.close();
            }
        }

        return null;
    }
    /**
     * 数据查询，将格力空调打开键的信息提取出来
     */
    public List<Remote> getairOpen(){
        SQLiteDatabase db = null;
        Cursor cursor = null;
        try {
            db = ordersDBHelper.getReadableDatabase();

            // select * from Orders where Function = 'Bor'
            cursor = db.query(RemoteDBHelper.TABLE_NAME,
                    ORDER_COLUMNS,
                    "Function = ?",
                    new String[] {"空调开"},
                    null, null, null);
Log.e("count", String.valueOf(cursor.getCount()));
            if (cursor.getCount() > 0) {
                List<Remote> orderList = new ArrayList<Remote>(cursor.getCount());
                while (cursor.moveToNext()) {
                    Remote Remote = parseOrder(cursor);
                    orderList.add(Remote);
                }
                return orderList;
            }
        }
        catch (Exception e) {
            Log.e("错误", "cuo1", e);
        }
        finally {
            if (cursor != null) {
                cursor.close();
            }
            if (db != null) {
                db.close();
            }
        }

        return null;
    }
    /**
     * 数据查询，将格力空调制冷模式的信息提取出来
     */
    public List<Remote> getRefrigerationOrder(){
        SQLiteDatabase db = null;
        Cursor cursor = null;
        try {
            db = ordersDBHelper.getReadableDatabase();

            // select * from Orders where Function = 'Bor'
            cursor = db.query(RemoteDBHelper.TABLE_NAME,
                    ORDER_COLUMNS,
                    "Function = ?",
                    new String[] {"制冷模式"},
                    null, null, null);
            Log.e("count", String.valueOf(cursor.getCount()));
            if (cursor.getCount() > 0) {
                List<Remote> orderList = new ArrayList<Remote>(cursor.getCount());
                while (cursor.moveToNext()) {
                    Remote Remote = parseOrder(cursor);
                    orderList.add(Remote);
                }
                return orderList;
            }
        }
        catch (Exception e) {
            Log.e("错误", "cuo1", e);
        }
        finally {
            if (cursor != null) {
                cursor.close();
            }
            if (db != null) {
                db.close();
            }
        }

        return null;
    }
    /**
     * 数据查询，将格力空调关的信息提取出来
     */
    public List<Remote> getAirOffOrder(){
        SQLiteDatabase db = null;
        Cursor cursor = null;
        try {
            db = ordersDBHelper.getReadableDatabase();

            // select * from Orders where Function = 'Bor'
            cursor = db.query(RemoteDBHelper.TABLE_NAME,
                    ORDER_COLUMNS,
                    "Function = ?",
                    new String[] {"空调关"},
                    null, null, null);
            Log.e("count", String.valueOf(cursor.getCount()));
            if (cursor.getCount() > 0) {
                List<Remote> orderList = new ArrayList<Remote>(cursor.getCount());
                while (cursor.moveToNext()) {
                    Remote Remote = parseOrder(cursor);
                    orderList.add(Remote);
                }
                return orderList;
            }
        }
        catch (Exception e) {
            Log.e("错误", "cuo1", e);
        }
        finally {
            if (cursor != null) {
                cursor.close();
            }
            if (db != null) {
                db.close();
            }
        }

        return null;
    }
    /**
     * 数据查询，将格力空调制热模式的信息提取出来
     */
    public List<Remote> getHeatingOrder(){
        SQLiteDatabase db = null;
        Cursor cursor = null;
        try {
            db = ordersDBHelper.getReadableDatabase();

            // select * from Orders where Function = 'Bor'
            cursor = db.query(RemoteDBHelper.TABLE_NAME,
                    ORDER_COLUMNS,
                    "Function = ?",
                    new String[] {"制热模式"},
                    null, null, null);
            Log.e("count", String.valueOf(cursor.getCount()));
            if (cursor.getCount() > 0) {
                List<Remote> orderList = new ArrayList<Remote>(cursor.getCount());
                while (cursor.moveToNext()) {
                    Remote Remote = parseOrder(cursor);
                    orderList.add(Remote);
                }
                return orderList;
            }
        }
        catch (Exception e) {
            Log.e("错误", "cuo1", e);
        }
        finally {
            if (cursor != null) {
                cursor.close();
            }
            if (db != null) {
                db.close();
            }
        }

        return null;
    }
    /**
     * 数据查询，将格力空调送风模式的信息提取出来
     */
    public List<Remote> getAirSupplyOrder(){
        SQLiteDatabase db = null;
        Cursor cursor = null;
        try {
            db = ordersDBHelper.getReadableDatabase();

            // select * from Orders where Function = 'Bor'
            cursor = db.query(RemoteDBHelper.TABLE_NAME,
                    ORDER_COLUMNS,
                    "Function = ?",
                    new String[] {"送风"},
                    null, null, null);
            Log.e("count", String.valueOf(cursor.getCount()));
            if (cursor.getCount() > 0) {
                List<Remote> orderList = new ArrayList<Remote>(cursor.getCount());
                while (cursor.moveToNext()) {
                    Remote Remote = parseOrder(cursor);
                    orderList.add(Remote);
                }
                return orderList;
            }
        }
        catch (Exception e) {
            Log.e("错误", "cuo1", e);
        }
        finally {
            if (cursor != null) {
                cursor.close();
            }
            if (db != null) {
                db.close();
            }
        }

        return null;
    }
    /**
     * 数据查询，将格力空调除湿模式的信息提取出来
     */
    public List<Remote> getDehumidificationOrder(){
        SQLiteDatabase db = null;
        Cursor cursor = null;
        try {
            db = ordersDBHelper.getReadableDatabase();

            // select * from Orders where Function = 'Bor'
            cursor = db.query(RemoteDBHelper.TABLE_NAME,
                    ORDER_COLUMNS,
                    "Function = ?",
                    new String[] {"除湿"},
                    null, null, null);
            Log.e("count", String.valueOf(cursor.getCount()));
            if (cursor.getCount() > 0) {
                List<Remote> orderList = new ArrayList<Remote>(cursor.getCount());
                while (cursor.moveToNext()) {
                    Remote Remote = parseOrder(cursor);
                    orderList.add(Remote);
                }
                return orderList;
            }
        }
        catch (Exception e) {
            Log.e("错误", "cuo1", e);
        }
        finally {
            if (cursor != null) {
                cursor.close();
            }
            if (db != null) {
                db.close();
            }
        }

        return null;
    }

    /**
     * 数据查询，将索尼电视菜单键的信息提取出来
     */
    public List<Remote> getMenuOrder(){
        SQLiteDatabase db = null;
        Cursor cursor = null;
        try {
            db = ordersDBHelper.getReadableDatabase();

            // select * from Orders where Function = 'Bor'
            cursor = db.query(RemoteDBHelper.TABLE_NAME,
                    ORDER_COLUMNS,
                    "Function = ?",
                    new String[] {"主菜单"},
                    null, null, null);

            if (cursor.getCount() > 0) {
                List<Remote> orderList = new ArrayList<Remote>(cursor.getCount());
                while (cursor.moveToNext()) {
                    Remote Remote = parseOrder(cursor);
                    orderList.add(Remote);
                }
                return orderList;
            }
        }
        catch (Exception e) {
            Log.e(TAG, "", e);
        }
        finally {
            if (cursor != null) {
                cursor.close();
            }
            if (db != null) {
                db.close();
            }
        }

        return null;
    }
 /**
     * 数据查询，将索尼电视音量加键的信息提取出来
     */
    public List<Remote> getPlusOrder(){
        SQLiteDatabase db = null;
        Cursor cursor = null;
        try {
            db = ordersDBHelper.getReadableDatabase();

            // select * from Orders where Function = 'Bor'
            cursor = db.query(RemoteDBHelper.TABLE_NAME,
                    ORDER_COLUMNS,
                    "Function = ?",
                    new String[] {"音量加"},
                    null, null, null);

            if (cursor.getCount() > 0) {
                List<Remote> orderList = new ArrayList<Remote>(cursor.getCount());
                while (cursor.moveToNext()) {
                    Remote Remote = parseOrder(cursor);
                    orderList.add(Remote);
                }
                return orderList;
            }
        }
        catch (Exception e) {
            Log.e(TAG, "", e);
        }
        finally {
            if (cursor != null) {
                cursor.close();
            }
            if (db != null) {
                db.close();
            }
        }

        return null;
    }
 /**
     * 数据查询  将索尼电视音量减键的信息提取出来
     */
    public List<Remote> getLessOrder(){
        SQLiteDatabase db = null;
        Cursor cursor = null;
        try {
            db = ordersDBHelper.getReadableDatabase();

            // select * from Orders where Function = 'Bor'
            cursor = db.query(RemoteDBHelper.TABLE_NAME,
                    ORDER_COLUMNS,
                    "Function = ?",
                    new String[] {"音量减"},
                    null, null, null);

            if (cursor.getCount() > 0) {
                List<Remote> orderList = new ArrayList<Remote>(cursor.getCount());
                while (cursor.moveToNext()) {
                    Remote Remote = parseOrder(cursor);
                    orderList.add(Remote);
                }
                return orderList;
            }
        }
        catch (Exception e) {
            Log.e(TAG, "", e);
        }
        finally {
            if (cursor != null) {
                cursor.close();
            }
            if (db != null) {
                db.close();
            }
        }

        return null;
    }
 /**
     * 数据查询  将索尼电视频道加键的信息提取出来
     */
    public List<Remote> getNextOrder(){
        SQLiteDatabase db = null;
        Cursor cursor = null;
        try {
            db = ordersDBHelper.getReadableDatabase();

            // select * from Orders where Function = 'Bor'
            cursor = db.query(RemoteDBHelper.TABLE_NAME,
                    ORDER_COLUMNS,
                    "Function = ?",
                    new String[] {"频道加"},
                    null, null, null);

            if (cursor.getCount() > 0) {
                List<Remote> orderList = new ArrayList<Remote>(cursor.getCount());
                while (cursor.moveToNext()) {
                    Remote Remote = parseOrder(cursor);
                    orderList.add(Remote);
                }
                return orderList;
            }
        }
        catch (Exception e) {
            Log.e(TAG, "", e);
        }
        finally {
            if (cursor != null) {
                cursor.close();
            }
            if (db != null) {
                db.close();
            }
        }

        return null;
    }
 /**
     * 数据查询  将索尼电视频道减键的信息提取出来
     */
    public List<Remote> getPreviousOrder(){
        SQLiteDatabase db = null;
        Cursor cursor = null;
        try {
            db = ordersDBHelper.getReadableDatabase();

            // select * from Orders where Function = 'Bor'
            cursor = db.query(RemoteDBHelper.TABLE_NAME,
                    ORDER_COLUMNS,
                    "Function = ?",
                    new String[] {"频道减"},
                    null, null, null);

            if (cursor.getCount() > 0) {
                List<Remote> orderList = new ArrayList<Remote>(cursor.getCount());
                while (cursor.moveToNext()) {
                    Remote Remote = parseOrder(cursor);
                    orderList.add(Remote);
                }
                return orderList;
            }
        }
        catch (Exception e) {
            Log.e(TAG, "", e);
        }
        finally {
            if (cursor != null) {
                cursor.close();
            }
            if (db != null) {
                db.close();
            }
        }

        return null;
    }
 /**
     * 数据查询  将索尼电视上键键的信息提取出来
     */
    public List<Remote> getUpOrder(){
        SQLiteDatabase db = null;
        Cursor cursor = null;
        try {
            db = ordersDBHelper.getReadableDatabase();

            // select * from Orders where Function = 'Bor'
            cursor = db.query(RemoteDBHelper.TABLE_NAME,
                    ORDER_COLUMNS,
                    "Function = ?",
                    new String[] {"上键"},
                    null, null, null);

            if (cursor.getCount() > 0) {
                List<Remote> orderList = new ArrayList<Remote>(cursor.getCount());
                while (cursor.moveToNext()) {
                    Remote Remote = parseOrder(cursor);
                    orderList.add(Remote);
                }
                return orderList;
            }
        }
        catch (Exception e) {
            Log.e(TAG, "", e);
        }
        finally {
            if (cursor != null) {
                cursor.close();
            }
            if (db != null) {
                db.close();
            }
        }

        return null;
    }
 /**
     * 数据查询  将索尼电视下键键的信息提取出来
     */
    public List<Remote> getDownOrder(){
        SQLiteDatabase db = null;
        Cursor cursor = null;
        try {
            db = ordersDBHelper.getReadableDatabase();

            // select * from Orders where Function = 'Bor'
            cursor = db.query(RemoteDBHelper.TABLE_NAME,
                    ORDER_COLUMNS,
                    "Function = ?",
                    new String[] {"下键"},
                    null, null, null);

            if (cursor.getCount() > 0) {
                List<Remote> orderList = new ArrayList<Remote>(cursor.getCount());
                while (cursor.moveToNext()) {
                    Remote Remote = parseOrder(cursor);
                    orderList.add(Remote);
                }
                return orderList;
            }
        }
        catch (Exception e) {
            Log.e(TAG, "", e);
        }
        finally {
            if (cursor != null) {
                cursor.close();
            }
            if (db != null) {
                db.close();
            }
        }

        return null;
    }
 /**
     * 数据查询  将索尼电视左键键的信息提取出来
     */
    public List<Remote> getLeftOrder(){
        SQLiteDatabase db = null;
        Cursor cursor = null;
        try {
            db = ordersDBHelper.getReadableDatabase();

            // select * from Orders where Function = 'Bor'
            cursor = db.query(RemoteDBHelper.TABLE_NAME,
                    ORDER_COLUMNS,
                    "Function = ?",
                    new String[] {"左键"},
                    null, null, null);

            if (cursor.getCount() > 0) {
                List<Remote> orderList = new ArrayList<Remote>(cursor.getCount());
                while (cursor.moveToNext()) {
                    Remote Remote = parseOrder(cursor);
                    orderList.add(Remote);
                }
                return orderList;
            }
        }
        catch (Exception e) {
            Log.e(TAG, "", e);
        }
        finally {
            if (cursor != null) {
                cursor.close();
            }
            if (db != null) {
                db.close();
            }
        }

        return null;
    }
 /**
     * 数据查询  此处将索尼电视右键键的信息提取出来
     */
    public List<Remote> getRightOrder(){
        SQLiteDatabase db = null;
        Cursor cursor = null;
        try {
            db = ordersDBHelper.getReadableDatabase();

            // select * from Orders where Function = 'Bor'
            cursor = db.query(RemoteDBHelper.TABLE_NAME,
                    ORDER_COLUMNS,
                    "Function = ?",
                    new String[] {"右键"},
                    null, null, null);

            if (cursor.getCount() > 0) {
                List<Remote> orderList = new ArrayList<Remote>(cursor.getCount());
                while (cursor.moveToNext()) {
                    Remote Remote = parseOrder(cursor);
                    orderList.add(Remote);
                }
                return orderList;
            }
        }
        catch (Exception e) {
            Log.e(TAG, "", e);
        }
        finally {
            if (cursor != null) {
                cursor.close();
            }
            if (db != null) {
                db.close();
            }
        }

        return null;
    }
    /**
     * 数据查询  此处将索尼电视中键键的信息提取出来
     */
    public List<Remote> getOkOrder(){
        SQLiteDatabase db = null;
        Cursor cursor = null;
        try {
            db = ordersDBHelper.getReadableDatabase();

            // select * from Orders where Function = 'Bor'
            cursor = db.query(RemoteDBHelper.TABLE_NAME,
                    ORDER_COLUMNS,
                    "Function = ?",
                    new String[] {"中键"},
                    null, null, null);

            if (cursor.getCount() > 0) {
                List<Remote> orderList = new ArrayList<Remote>(cursor.getCount());
                while (cursor.moveToNext()) {
                    Remote Remote = parseOrder(cursor);
                    orderList.add(Remote);
                }
                return orderList;
            }
        }
        catch (Exception e) {
            Log.e(TAG, "", e);
        }
        finally {
            if (cursor != null) {
                cursor.close();
            }
            if (db != null) {
                db.close();
            }
        }

        return null;
    }
 /**
     * 数据查询  此处将索尼电视输入选择键的信息提取出来
     */
    public List<Remote> getTvavOrder(){
        SQLiteDatabase db = null;
        Cursor cursor = null;
        try {
            db = ordersDBHelper.getReadableDatabase();

            // select * from Orders where Function = 'Bor'
            cursor = db.query(RemoteDBHelper.TABLE_NAME,
                    ORDER_COLUMNS,
                    "Function = ?",
                    new String[] {"输入选择"},
                    null, null, null);

            if (cursor.getCount() > 0) {
                List<Remote> orderList = new ArrayList<Remote>(cursor.getCount());
                while (cursor.moveToNext()) {
                    Remote Remote = parseOrder(cursor);
                    orderList.add(Remote);
                }
                return orderList;
            }
        }
        catch (Exception e) {
            Log.e(TAG, "", e);
        }
        finally {
            if (cursor != null) {
                cursor.close();
            }
            if (db != null) {
                db.close();
            }
        }

        return null;
    }
 /**
     * 数据查询  此处将索尼电视频道选择键的信息提取出来
     */
    public List<Remote> getChanelOrder(){
        SQLiteDatabase db = null;
        Cursor cursor = null;
        try {
            db = ordersDBHelper.getReadableDatabase();

            // select * from Orders where Function = 'Bor'
            cursor = db.query(RemoteDBHelper.TABLE_NAME,
                    ORDER_COLUMNS,
                    "Function = ?",
                    new String[] {"频道选择"},
                    null, null, null);

            if (cursor.getCount() > 0) {
                List<Remote> orderList = new ArrayList<Remote>(cursor.getCount());
                while (cursor.moveToNext()) {
                    Remote Remote = parseOrder(cursor);
                    orderList.add(Remote);
                }
                return orderList;
            }
        }
        catch (Exception e) {
            Log.e(TAG, "", e);
        }
        finally {
            if (cursor != null) {
                cursor.close();
            }
            if (db != null) {
                db.close();
            }
        }

        return null;
    }
 /**
     * 数据查询  此处将索尼电视回看键的信息提取出来
     */
    public List<Remote> getReminisceOrder(){
        SQLiteDatabase db = null;
        Cursor cursor = null;
        try {
            db = ordersDBHelper.getReadableDatabase();

            // select * from Orders where Function = 'Bor'
            cursor = db.query(RemoteDBHelper.TABLE_NAME,
                    ORDER_COLUMNS,
                    "Function = ?",
                    new String[] {"回看"},
                    null, null, null);

            if (cursor.getCount() > 0) {
                List<Remote> orderList = new ArrayList<Remote>(cursor.getCount());
                while (cursor.moveToNext()) {
                    Remote Remote = parseOrder(cursor);
                    orderList.add(Remote);
                }
                return orderList;
            }
        }
        catch (Exception e) {
            Log.e(TAG, "", e);
        }
        finally {
            if (cursor != null) {
                cursor.close();
            }
            if (db != null) {
                db.close();
            }
        }

        return null;
    }
 /**
     * 数据查询  此处将索尼电视静音键的信息提取出来
     */
    public List<Remote> getMuteOrder(){
        SQLiteDatabase db = null;
        Cursor cursor = null;
        try {
            db = ordersDBHelper.getReadableDatabase();

            // select * from Orders where Function = 'Bor'
            cursor = db.query(RemoteDBHelper.TABLE_NAME,
                    ORDER_COLUMNS,
                    "Function = ?",
                    new String[] {"静音"},
                    null, null, null);

            if (cursor.getCount() > 0) {
                List<Remote> orderList = new ArrayList<Remote>(cursor.getCount());
                while (cursor.moveToNext()) {
                    Remote Remote = parseOrder(cursor);
                    orderList.add(Remote);
                }
                return orderList;
            }
        }
        catch (Exception e) {
            Log.e(TAG, "", e);
        }
        finally {
            if (cursor != null) {
                cursor.close();
            }
            if (db != null) {
                db.close();
            }
        }

        return null;
    }
 /**
     * 数据查询  此处将索尼电视退出键的信息提取出来
     */
    public List<Remote> getDrop_outOrder(){
        SQLiteDatabase db = null;
        Cursor cursor = null;
        try {
            db = ordersDBHelper.getReadableDatabase();

            // select * from Orders where Function = 'Bor'
            cursor = db.query(RemoteDBHelper.TABLE_NAME,
                    ORDER_COLUMNS,
                    "Function = ?",
                    new String[] {"返回"},
                    null, null, null);

            if (cursor.getCount() > 0) {
                List<Remote> orderList = new ArrayList<Remote>(cursor.getCount());
                while (cursor.moveToNext()) {
                    Remote Remote = parseOrder(cursor);
                    orderList.add(Remote);
                }
                return orderList;
            }
        }
        catch (Exception e) {
            Log.e(TAG, "", e);
        }
        finally {
            if (cursor != null) {
                cursor.close();
            }
            if (db != null) {
                db.close();
            }
        }

        return null;
    }

 /**
     * 数据查询  此处将索尼电视频道1键的信息提取出来
     */
    public List<Remote> getOneOrder(){
        SQLiteDatabase db = null;
        Cursor cursor = null;
        try {
            db = ordersDBHelper.getReadableDatabase();

            // select * from Orders where Function = 'Bor'
            cursor = db.query(RemoteDBHelper.TABLE_NAME,
                    ORDER_COLUMNS,
                    "Function = ?",
                    new String[] {"1"},
                    null, null, null);

            if (cursor.getCount() > 0) {
                List<Remote> orderList = new ArrayList<Remote>(cursor.getCount());
                while (cursor.moveToNext()) {
                    Remote Remote = parseOrder(cursor);
                    orderList.add(Remote);
                }
                return orderList;
            }
        }
        catch (Exception e) {
            Log.e(TAG, "", e);
        }
        finally {
            if (cursor != null) {
                cursor.close();
            }
            if (db != null) {
                db.close();
            }
        }

        return null;
    }
 /**
     * 数据查询  此处将索尼电视频道2键的信息提取出来
     */
    public List<Remote> getTwoOrder(){
        SQLiteDatabase db = null;
        Cursor cursor = null;
        try {
            db = ordersDBHelper.getReadableDatabase();

            // select * from Orders where Function = 'Bor'
            cursor = db.query(RemoteDBHelper.TABLE_NAME,
                    ORDER_COLUMNS,
                    "Function = ?",
                    new String[] {"2"},
                    null, null, null);

            if (cursor.getCount() > 0) {
                List<Remote> orderList = new ArrayList<Remote>(cursor.getCount());
                while (cursor.moveToNext()) {
                    Remote Remote = parseOrder(cursor);
                    orderList.add(Remote);
                }
                return orderList;
            }
        }
        catch (Exception e) {
            Log.e(TAG, "", e);
        }
        finally {
            if (cursor != null) {
                cursor.close();
            }
            if (db != null) {
                db.close();
            }
        }

        return null;
    }
 /**
     * 数据查询  此处将索尼电视频道3键的信息提取出来
     */
    public List<Remote> getThreeOrder(){
        SQLiteDatabase db = null;
        Cursor cursor = null;
        try {
            db = ordersDBHelper.getReadableDatabase();

            // select * from Orders where Function = 'Bor'
            cursor = db.query(RemoteDBHelper.TABLE_NAME,
                    ORDER_COLUMNS,
                    "Function = ?",
                    new String[] {"3"},
                    null, null, null);

            if (cursor.getCount() > 0) {
                List<Remote> orderList = new ArrayList<Remote>(cursor.getCount());
                while (cursor.moveToNext()) {
                    Remote Remote = parseOrder(cursor);
                    orderList.add(Remote);
                }
                return orderList;
            }
        }
        catch (Exception e) {
            Log.e(TAG, "", e);
        }
        finally {
            if (cursor != null) {
                cursor.close();
            }
            if (db != null) {
                db.close();
            }
        }

        return null;
    }
 /**
     * 数据查询  此处将索尼电视频道4键的信息提取出来
     */
    public List<Remote> getFourOrder(){
        SQLiteDatabase db = null;
        Cursor cursor = null;
        try {
            db = ordersDBHelper.getReadableDatabase();

            // select * from Orders where Function = 'Bor'
            cursor = db.query(RemoteDBHelper.TABLE_NAME,
                    ORDER_COLUMNS,
                    "Function = ?",
                    new String[] {"4"},
                    null, null, null);

            if (cursor.getCount() > 0) {
                List<Remote> orderList = new ArrayList<Remote>(cursor.getCount());
                while (cursor.moveToNext()) {
                    Remote Remote = parseOrder(cursor);
                    orderList.add(Remote);
                }
                return orderList;
            }
        }
        catch (Exception e) {
            Log.e(TAG, "", e);
        }
        finally {
            if (cursor != null) {
                cursor.close();
            }
            if (db != null) {
                db.close();
            }
        }

        return null;
    }
 /**
     * 数据查询  此处将索尼电视频道5键的信息提取出来
     */
    public List<Remote> getFiveOrder(){
        SQLiteDatabase db = null;
        Cursor cursor = null;
        try {
            db = ordersDBHelper.getReadableDatabase();

            // select * from Orders where Function = 'Bor'
            cursor = db.query(RemoteDBHelper.TABLE_NAME,
                    ORDER_COLUMNS,
                    "Function = ?",
                    new String[] {"5"},
                    null, null, null);

            if (cursor.getCount() > 0) {
                List<Remote> orderList = new ArrayList<Remote>(cursor.getCount());
                while (cursor.moveToNext()) {
                    Remote Remote = parseOrder(cursor);
                    orderList.add(Remote);
                }
                return orderList;
            }
        }
        catch (Exception e) {
            Log.e(TAG, "", e);
        }
        finally {
            if (cursor != null) {
                cursor.close();
            }
            if (db != null) {
                db.close();
            }
        }

        return null;
    }
 /**
     * 数据查询  此处将索尼电视频道6键的信息提取出来
     */
    public List<Remote> getSixOrder(){
        SQLiteDatabase db = null;
        Cursor cursor = null;
        try {
            db = ordersDBHelper.getReadableDatabase();

            // select * from Orders where Function = 'Bor'
            cursor = db.query(RemoteDBHelper.TABLE_NAME,
                    ORDER_COLUMNS,
                    "Function = ?",
                    new String[] {"6"},
                    null, null, null);

            if (cursor.getCount() > 0) {
                List<Remote> orderList = new ArrayList<Remote>(cursor.getCount());
                while (cursor.moveToNext()) {
                    Remote Remote = parseOrder(cursor);
                    orderList.add(Remote);
                }
                return orderList;
            }
        }
        catch (Exception e) {
            Log.e(TAG, "", e);
        }
        finally {
            if (cursor != null) {
                cursor.close();
            }
            if (db != null) {
                db.close();
            }
        }

        return null;
    }
 /**
     * 数据查询  此处将索尼电视频道7键的信息提取出来
     */
    public List<Remote> getSevenOrder(){
        SQLiteDatabase db = null;
        Cursor cursor = null;
        try {
            db = ordersDBHelper.getReadableDatabase();

            // select * from Orders where Function = 'Bor'
            cursor = db.query(RemoteDBHelper.TABLE_NAME,
                    ORDER_COLUMNS,
                    "Function = ?",
                    new String[] {"7"},
                    null, null, null);

            if (cursor.getCount() > 0) {
                List<Remote> orderList = new ArrayList<Remote>(cursor.getCount());
                while (cursor.moveToNext()) {
                    Remote Remote = parseOrder(cursor);
                    orderList.add(Remote);
                }
                return orderList;
            }
        }
        catch (Exception e) {
            Log.e(TAG, "", e);
        }
        finally {
            if (cursor != null) {
                cursor.close();
            }
            if (db != null) {
                db.close();
            }
        }

        return null;
    }
    /**
     * 数据查询  此处将索尼电视频道8键的信息提取出来
     */
    public List<Remote> getEightOrder(){
        SQLiteDatabase db = null;
        Cursor cursor = null;
        try {
            db = ordersDBHelper.getReadableDatabase();

            // select * from Orders where Function = 'Bor'
            cursor = db.query(RemoteDBHelper.TABLE_NAME,
                    ORDER_COLUMNS,
                    "Function = ?",
                    new String[] {"8"},
                    null, null, null);

            if (cursor.getCount() > 0) {
                List<Remote> orderList = new ArrayList<Remote>(cursor.getCount());
                while (cursor.moveToNext()) {
                    Remote Remote = parseOrder(cursor);
                    orderList.add(Remote);
                }
                return orderList;
            }
        }
        catch (Exception e) {
            Log.e(TAG, "", e);
        }
        finally {
            if (cursor != null) {
                cursor.close();
            }
            if (db != null) {
                db.close();
            }
        }

        return null;
    }
    /**
     * 数据查询  此处将索尼电视频道9键的信息提取出来
     */
    public List<Remote> getNineOrder(){
        SQLiteDatabase db = null;
        Cursor cursor = null;
        try {
            db = ordersDBHelper.getReadableDatabase();

            // select * from Orders where Function = 'Bor'
            cursor = db.query(RemoteDBHelper.TABLE_NAME,
                    ORDER_COLUMNS,
                    "Function = ?",
                    new String[] {"9"},
                    null, null, null);

            if (cursor.getCount() > 0) {
                List<Remote> orderList = new ArrayList<Remote>(cursor.getCount());
                while (cursor.moveToNext()) {
                    Remote Remote = parseOrder(cursor);
                    orderList.add(Remote);
                }
                return orderList;
            }
        }
        catch (Exception e) {
            Log.e(TAG, "", e);
        }
        finally {
            if (cursor != null) {
                cursor.close();
            }
            if (db != null) {
                db.close();
            }
        }

        return null;
    }
    /**
     * 数据查询  此处将索尼电视频道0键的信息提取出来
     */
    public List<Remote> getZeroOrder(){
        SQLiteDatabase db = null;
        Cursor cursor = null;
        try {
            db = ordersDBHelper.getReadableDatabase();

            // select * from Orders where Function = 'Bor'
            cursor = db.query(RemoteDBHelper.TABLE_NAME,
                    ORDER_COLUMNS,
                    "Function = ?",
                    new String[] {"0"},
                    null, null, null);

            if (cursor.getCount() > 0) {
                List<Remote> orderList = new ArrayList<Remote>(cursor.getCount());
                while (cursor.moveToNext()) {
                    Remote Remote = parseOrder(cursor);
                    orderList.add(Remote);
                }
                return orderList;
            }
        }
        catch (Exception e) {
            Log.e(TAG, "", e);
        }
        finally {
            if (cursor != null) {
                cursor.close();
            }
            if (db != null) {
                db.close();
            }
        }

        return null;
    }
 /**
     * 数据查询  此处将索尼电视返回键的信息提取出来
     */
    public List<Remote> getReturnOrder(){
        SQLiteDatabase db = null;
        Cursor cursor = null;
        try {
            db = ordersDBHelper.getReadableDatabase();

            // select * from Orders where Function = 'Bor'
            cursor = db.query(RemoteDBHelper.TABLE_NAME,
                    ORDER_COLUMNS,
                    "Function = ?",
                    new String[] {"返回"},
                    null, null, null);

            if (cursor.getCount() > 0) {
                List<Remote> orderList = new ArrayList<Remote>(cursor.getCount());
                while (cursor.moveToNext()) {
                    Remote Remote = parseOrder(cursor);
                    orderList.add(Remote);
                }
                return orderList;
            }
        }
        catch (Exception e) {
            Log.e(TAG, "", e);
        }
        finally {
            if (cursor != null) {
                cursor.close();
            }
            if (db != null) {
                db.close();
            }
        }

        return null;
    }
    /**
     * 数据查询  此处将索尼电视声音切换键的信息提取出来
     */
    public List<Remote> getBtn1Order(){
        SQLiteDatabase db = null;
        Cursor cursor = null;
        try {
            db = ordersDBHelper.getReadableDatabase();

            // select * from Orders where Function = 'Bor'
            cursor = db.query(RemoteDBHelper.TABLE_NAME,
                    ORDER_COLUMNS,
                    "Function = ?",
                    new String[] {"声音切换"},
                    null, null, null);

            if (cursor.getCount() > 0) {
                List<Remote> orderList = new ArrayList<Remote>(cursor.getCount());
                while (cursor.moveToNext()) {
                    Remote Remote = parseOrder(cursor);
                    orderList.add(Remote);
                }
                return orderList;
            }
        }
        catch (Exception e) {
            Log.e(TAG, "", e);
        }
        finally {
            if (cursor != null) {
                cursor.close();
            }
            if (db != null) {
                db.close();
            }
        }

        return null;
    }
    /**
     * 数据查询  此处将索尼电视SEN键的信息提取出来
     */
    public List<Remote> getBtn2Order(){
        SQLiteDatabase db = null;
        Cursor cursor = null;
        try {
            db = ordersDBHelper.getReadableDatabase();

            // select * from Orders where Function = 'Bor'
            cursor = db.query(RemoteDBHelper.TABLE_NAME,
                    ORDER_COLUMNS,
                    "Function = ?",
                    new String[] {"SEN"},
                    null, null, null);

            if (cursor.getCount() > 0) {
                List<Remote> orderList = new ArrayList<Remote>(cursor.getCount());
                while (cursor.moveToNext()) {
                    Remote Remote = parseOrder(cursor);
                    orderList.add(Remote);
                }
                return orderList;
            }
        }
        catch (Exception e) {
            Log.e(TAG, "", e);
        }
        finally {
            if (cursor != null) {
                cursor.close();
            }
            if (db != null) {
                db.close();
            }
        }

        return null;
    }
    /**
     * 数据查询  此处将索尼电视屏显键的信息提取出来
     */
    public List<Remote> getBtn3Order(){
        SQLiteDatabase db = null;
        Cursor cursor = null;
        try {
            db = ordersDBHelper.getReadableDatabase();

            // select * from Orders where Function = 'Bor'
            cursor = db.query(RemoteDBHelper.TABLE_NAME,
                    ORDER_COLUMNS,
                    "Function = ?",
                    new String[] {"屏显"},
                    null, null, null);

            if (cursor.getCount() > 0) {
                List<Remote> orderList = new ArrayList<Remote>(cursor.getCount());
                while (cursor.moveToNext()) {
                    Remote Remote = parseOrder(cursor);
                    orderList.add(Remote);
                }
                return orderList;
            }
        }
        catch (Exception e) {
            Log.e(TAG, "", e);
        }
        finally {
            if (cursor != null) {
                cursor.close();
            }
            if (db != null) {
                db.close();
            }
        }

        return null;
    }
    /**
     * 数据查询  此处将索尼电视电子节目指南键的信息提取出来
     */
    public List<Remote> getBtn4Order(){
        SQLiteDatabase db = null;
        Cursor cursor = null;
        try {
            db = ordersDBHelper.getReadableDatabase();

            // select * from Orders where Function = 'Bor'
            cursor = db.query(RemoteDBHelper.TABLE_NAME,
                    ORDER_COLUMNS,
                    "Function = ?",
                    new String[] {"电子节目指南"},
                    null, null, null);

            if (cursor.getCount() > 0) {
                List<Remote> orderList = new ArrayList<Remote>(cursor.getCount());
                while (cursor.moveToNext()) {
                    Remote Remote = parseOrder(cursor);
                    orderList.add(Remote);
                }
                return orderList;
            }
        }
        catch (Exception e) {
            Log.e(TAG, "", e);
        }
        finally {
            if (cursor != null) {
                cursor.close();
            }
            if (db != null) {
                db.close();
            }
        }

        return null;
    }
    /**
     * 数据查询  此处将索尼电视数字键的信息提取出来
     */
    public List<Remote> getBtn5Order(){
        SQLiteDatabase db = null;
        Cursor cursor = null;
        try {
            db = ordersDBHelper.getReadableDatabase();

            // select * from Orders where Function = 'Bor'
            cursor = db.query(RemoteDBHelper.TABLE_NAME,
                    ORDER_COLUMNS,
                    "Function = ?",
                    new String[] {"数字"},
                    null, null, null);

            if (cursor.getCount() > 0) {
                List<Remote> orderList = new ArrayList<Remote>(cursor.getCount());
                while (cursor.moveToNext()) {
                    Remote Remote = parseOrder(cursor);
                    orderList.add(Remote);
                }
                return orderList;
            }
        }
        catch (Exception e) {
            Log.e(TAG, "", e);
        }
        finally {
            if (cursor != null) {
                cursor.close();
            }
            if (db != null) {
                db.close();
            }
        }

        return null;
    }
    /**
     * 数据查询  此处将索尼电视双画面键的信息提取出来
     */
    public List<Remote> getBtn6Order(){
        SQLiteDatabase db = null;
        Cursor cursor = null;
        try {
            db = ordersDBHelper.getReadableDatabase();

            // select * from Orders where Function = 'Bor'
            cursor = db.query(RemoteDBHelper.TABLE_NAME,
                    ORDER_COLUMNS,
                    "Function = ?",
                    new String[] {"双画面"},
                    null, null, null);

            if (cursor.getCount() > 0) {
                List<Remote> orderList = new ArrayList<Remote>(cursor.getCount());
                while (cursor.moveToNext()) {
                    Remote Remote = parseOrder(cursor);
                    orderList.add(Remote);
                }
                return orderList;
            }
        }
        catch (Exception e) {
            Log.e(TAG, "", e);
        }
        finally {
            if (cursor != null) {
                cursor.close();
            }
            if (db != null) {
                db.close();
            }
        }

        return null;
    }
    /**
     * 数据查询  此处将索尼电视相框模式键的信息提取出来
     */
    public List<Remote> getBtn7Order(){
        SQLiteDatabase db = null;
        Cursor cursor = null;
        try {
            db = ordersDBHelper.getReadableDatabase();

            // select * from Orders where Function = 'Bor'
            cursor = db.query(RemoteDBHelper.TABLE_NAME,
                    ORDER_COLUMNS,
                    "Function = ?",
                    new String[] {"相框模式"},
                    null, null, null);

            if (cursor.getCount() > 0) {
                List<Remote> orderList = new ArrayList<Remote>(cursor.getCount());
                while (cursor.moveToNext()) {
                    Remote Remote = parseOrder(cursor);
                    orderList.add(Remote);
                }
                return orderList;
            }
        }
        catch (Exception e) {
            Log.e(TAG, "", e);
        }
        finally {
            if (cursor != null) {
                cursor.close();
            }
            if (db != null) {
                db.close();
            }
        }

        return null;
    }
    /**
     * 数据查询  此处将索尼电视红键的信息提取出来
     */
    public List<Remote> getBtn8Order(){
        SQLiteDatabase db = null;
        Cursor cursor = null;
        try {
            db = ordersDBHelper.getReadableDatabase();

            // select * from Orders where Function = 'Bor'
            cursor = db.query(RemoteDBHelper.TABLE_NAME,
                    ORDER_COLUMNS,
                    "Function = ?",
                    new String[] {"红"},
                    null, null, null);

            if (cursor.getCount() > 0) {
                List<Remote> orderList = new ArrayList<Remote>(cursor.getCount());
                while (cursor.moveToNext()) {
                    Remote Remote = parseOrder(cursor);
                    orderList.add(Remote);
                }
                return orderList;
            }
        }
        catch (Exception e) {
            Log.e(TAG, "", e);
        }
        finally {
            if (cursor != null) {
                cursor.close();
            }
            if (db != null) {
                db.close();
            }
        }

        return null;
    }
    /**
     * 数据查询  此处将索尼电视绿键的信息提取出来
     */
    public List<Remote> getBtn9Order(){
        SQLiteDatabase db = null;
        Cursor cursor = null;
        try {
            db = ordersDBHelper.getReadableDatabase();

            // select * from Orders where Function = 'Bor'
            cursor = db.query(RemoteDBHelper.TABLE_NAME,
                    ORDER_COLUMNS,
                    "Function = ?",
                    new String[] {"绿"},
                    null, null, null);

            if (cursor.getCount() > 0) {
                List<Remote> orderList = new ArrayList<Remote>(cursor.getCount());
                while (cursor.moveToNext()) {
                    Remote Remote = parseOrder(cursor);
                    orderList.add(Remote);
                }
                return orderList;
            }
        }
        catch (Exception e) {
            Log.e(TAG, "", e);
        }
        finally {
            if (cursor != null) {
                cursor.close();
            }
            if (db != null) {
                db.close();
            }
        }

        return null;
    }
    /**
     * 数据查询  此处将索尼电视黄键的信息提取出来
     */
    public List<Remote> getBtn10Order(){
        SQLiteDatabase db = null;
        Cursor cursor = null;
        try {
            db = ordersDBHelper.getReadableDatabase();

            // select * from Orders where Function = 'Bor'
            cursor = db.query(RemoteDBHelper.TABLE_NAME,
                    ORDER_COLUMNS,
                    "Function = ?",
                    new String[] {"黄"},
                    null, null, null);

            if (cursor.getCount() > 0) {
                List<Remote> orderList = new ArrayList<Remote>(cursor.getCount());
                while (cursor.moveToNext()) {
                    Remote Remote = parseOrder(cursor);
                    orderList.add(Remote);
                }
                return orderList;
            }
        }
        catch (Exception e) {
            Log.e(TAG, "", e);
        }
        finally {
            if (cursor != null) {
                cursor.close();
            }
            if (db != null) {
                db.close();
            }
        }

        return null;
    }
    /**
     * 数据查询  此处将索尼电视蓝键的信息提取出来
     */
    public List<Remote> getBtn11Order(){
        SQLiteDatabase db = null;
        Cursor cursor = null;
        try {
            db = ordersDBHelper.getReadableDatabase();

            // select * from Orders where Function = 'Bor'
            cursor = db.query(RemoteDBHelper.TABLE_NAME,
                    ORDER_COLUMNS,
                    "Function = ?",
                    new String[] {"蓝"},
                    null, null, null);

            if (cursor.getCount() > 0) {
                List<Remote> orderList = new ArrayList<Remote>(cursor.getCount());
                while (cursor.moveToNext()) {
                    Remote Remote = parseOrder(cursor);
                    orderList.add(Remote);
                }
                return orderList;
            }
        }
        catch (Exception e) {
            Log.e(TAG, "", e);
        }
        finally {
            if (cursor != null) {
                cursor.close();
            }
            if (db != null) {
                db.close();
            }
        }

        return null;
    }
    /**
     * 数据查询  此处将索尼电视3D键的信息提取出来
     */
    public List<Remote> getBtn12Order(){
        SQLiteDatabase db = null;
        Cursor cursor = null;
        try {
            db = ordersDBHelper.getReadableDatabase();

            // select * from Orders where Function = 'Bor'
            cursor = db.query(RemoteDBHelper.TABLE_NAME,
                    ORDER_COLUMNS,
                    "Function = ?",
                    new String[] {"3D"},
                    null, null, null);

            if (cursor.getCount() > 0) {
                List<Remote> orderList = new ArrayList<Remote>(cursor.getCount());
                while (cursor.moveToNext()) {
                    Remote Remote = parseOrder(cursor);
                    orderList.add(Remote);
                }
                return orderList;
            }
        }
        catch (Exception e) {
            Log.e(TAG, "", e);
        }
        finally {
            if (cursor != null) {
                cursor.close();
            }
            if (db != null) {
                db.close();
            }
        }

        return null;
    }
    /**
     * 数据查询  此处将索尼电视字幕设定键的信息提取出来
     */
    public List<Remote> getBtn13Order(){
        SQLiteDatabase db = null;
        Cursor cursor = null;
        try {
            db = ordersDBHelper.getReadableDatabase();

            // select * from Orders where Function = 'Bor'
            cursor = db.query(RemoteDBHelper.TABLE_NAME,
                    ORDER_COLUMNS,
                    "Function = ?",
                    new String[] {"字幕设定"},
                    null, null, null);

            if (cursor.getCount() > 0) {
                List<Remote> orderList = new ArrayList<Remote>(cursor.getCount());
                while (cursor.moveToNext()) {
                    Remote Remote = parseOrder(cursor);
                    orderList.add(Remote);
                }
                return orderList;
            }
        }
        catch (Exception e) {
            Log.e(TAG, "", e);
        }
        finally {
            if (cursor != null) {
                cursor.close();
            }
            if (db != null) {
                db.close();
            }
        }

        return null;
    }
    /**
     * 数据查询  此处将索尼电视同步菜单键的信息提取出来
     */
    public List<Remote> getBtn14Order(){
        SQLiteDatabase db = null;
        Cursor cursor = null;
        try {
            db = ordersDBHelper.getReadableDatabase();

            // select * from Orders where Function = 'Bor'
            cursor = db.query(RemoteDBHelper.TABLE_NAME,
                    ORDER_COLUMNS,
                    "Function = ?",
                    new String[] {"同步菜单"},
                    null, null, null);

            if (cursor.getCount() > 0) {
                List<Remote> orderList = new ArrayList<Remote>(cursor.getCount());
                while (cursor.moveToNext()) {
                    Remote Remote = parseOrder(cursor);
                    orderList.add(Remote);
                }
                return orderList;
            }
        }
        catch (Exception e) {
            Log.e(TAG, "", e);
        }
        finally {
            if (cursor != null) {
                cursor.close();
            }
            if (db != null) {
                db.close();
            }
        }

        return null;
    } /**
     * 数据查询  此处将索尼电视选项键的信息提取出来
     */
    public List<Remote> getBtn15Order(){
        SQLiteDatabase db = null;
        Cursor cursor = null;
        try {
            db = ordersDBHelper.getReadableDatabase();

            // select * from Orders where Function = 'Bor'
            cursor = db.query(RemoteDBHelper.TABLE_NAME,
                    ORDER_COLUMNS,
                    "Function = ?",
                    new String[] {"选项"},
                    null, null, null);

            if (cursor.getCount() > 0) {
                List<Remote> orderList = new ArrayList<Remote>(cursor.getCount());
                while (cursor.moveToNext()) {
                    Remote Remote = parseOrder(cursor);
                    orderList.add(Remote);
                }
                return orderList;
            }
        }
        catch (Exception e) {
            Log.e(TAG, "", e);
        }
        finally {
            if (cursor != null) {
                cursor.close();
            }
            if (db != null) {
                db.close();
            }
        }

        return null;
    }
    /**
     * 数据查询  此处将风扇风速/开键的信息提取出来
     */
    public List<Remote> getWind_speedOrder(){
        SQLiteDatabase db = null;
        Cursor cursor = null;
        try {
            db = ordersDBHelper.getReadableDatabase();

            // select * from Orders where Function = 'Bor'
            cursor = db.query(RemoteDBHelper.TABLE_NAME,
                    ORDER_COLUMNS,
                    "Function = ?",
                    new String[] {"风速/开"},
                    null, null, null);

            if (cursor.getCount() > 0) {
                List<Remote> orderList = new ArrayList<Remote>(cursor.getCount());
                while (cursor.moveToNext()) {
                    Remote Remote = parseOrder(cursor);
                    orderList.add(Remote);
                }
                return orderList;
            }
        }
        catch (Exception e) {
            Log.e(TAG, "", e);
        }
        finally {
            if (cursor != null) {
                cursor.close();
            }
            if (db != null) {
                db.close();
            }
        }

        return null;
    }
    /**
     * 数据查询  此处将风扇关键的信息提取出来
     */
    public List<Remote> getTurn_offOrder(){
        SQLiteDatabase db = null;
        Cursor cursor = null;
        try {
            db = ordersDBHelper.getReadableDatabase();

            // select * from Orders where Function = 'Bor'
            cursor = db.query(RemoteDBHelper.TABLE_NAME,
                    ORDER_COLUMNS,
                    "Function = ?",
                    new String[] {"风扇关"},
                    null, null, null);

            if (cursor.getCount() > 0) {
                Log.e("turn","youxiao");
                List<Remote> orderList = new ArrayList<Remote>(cursor.getCount());
                while (cursor.moveToNext()) {
                    Remote Remote = parseOrder(cursor);
                    orderList.add(Remote);
                }
                return orderList;
            }
        }
        catch (Exception e) {
            Log.e(TAG, "", e);
        }
        finally {
            if (cursor != null) {
                cursor.close();
            }
            if (db != null) {
                db.close();
            }
        }

        return null;
    }
    /**
     * 数据查询  此处将风扇摇头键的信息提取出来
     */
    public List<Remote> getShaking_headOrder(){
        SQLiteDatabase db = null;
        Cursor cursor = null;
        try {
            db = ordersDBHelper.getReadableDatabase();

            // select * from Orders where Function = 'Bor'
            cursor = db.query(RemoteDBHelper.TABLE_NAME,
                    ORDER_COLUMNS,
                    "Function = ?",
                    new String[] {"摇头"},
                    null, null, null);

            if (cursor.getCount() > 0) {
                List<Remote> orderList = new ArrayList<Remote>(cursor.getCount());
                while (cursor.moveToNext()) {
                    Remote Remote = parseOrder(cursor);
                    orderList.add(Remote);
                }
                return orderList;
            }
        }
        catch (Exception e) {
            Log.e(TAG, "", e);
        }
        finally {
            if (cursor != null) {
                cursor.close();
            }
            if (db != null) {
                db.close();
            }
        }

        return null;
    }
    /**
     * 将查找到键的数据转换成Order类
     */
    private Remote parseOrder(Cursor cursor){
        Remote Remote = new Remote();
        Remote.id = (cursor.getInt(cursor.getColumnIndex("Id")));
        Remote.function = (cursor.getString(cursor.getColumnIndex("Function")));
        Remote.code = (cursor.getString(cursor.getColumnIndex("Code")));
        return Remote;
    }
}
